{
  "name": "Javapractice",
  "tagline": "Java Practice",
  "body": "# JavaPractice\r\n\r\n## Algorithm\r\npractice algorithm implementation. algorithms are from:\r\n1. famous algorithm\r\n2. introduction to algorithm\r\n3. geeksforgeeks\r\n4. articles\r\n\r\n## Backtracking\r\nspecial practice for backtracking algorithm\r\n\r\n## Basic\r\nJAVA basic concept understanding.\r\n\r\n## cc150\r\nCracking Code Interview Problems\r\n\r\n## Database\r\nJAVA Database Manager and Connection\r\n\r\n## Design Patterns\r\nDesign pattern for JAVA. Original ideas are from:\r\n1. GoF Design Pattern: Elements of Reusable Object-Oriented Software\r\n2. Head First Design Pattern\r\n3. ISBN: 9787302162063\r\n\r\nDetails:\r\n- Factory\r\n- Strategy\r\n\r\n## leetcode\r\nLeetcode Algorithm problems\r\n\r\n##### [Array](https://github.com/grace0927/JavaPractice/wiki/Array)\r\n1. First Missing Positive\r\n2. Rotate Image\r\n3. Spiral Matrix\r\n4. Next Permutation\r\n5. Spiral Matrix II\r\n6. Merge Intervals\r\n7. Insert Interval\r\n8. Maximum Subarray\r\n9. Plus One\r\n10. Set Matrix Zeroes\r\n11. Pascal's Triangle\r\n12. Pascal's Triangle II\r\n13. Majority Element\r\n14. Rotate Array\r\n15. Summary Ranges\r\n16. Product of Array Except Self\r\n17. Missing Number\r\n18. Game of Life\r\n19. Increasing Triplet Subsequence\r\n20. Majority Element II\r\n\r\n##### [Backtracking](https://github.com/grace0927/JavaPractice/wiki/Backtracking)\r\n1. Letter Combinations of a Phone Number\r\n2. Generate Parentheses\r\n3. Sudoku Solver\r\n4. Combination Sum\r\n5. Combination Sum II\r\n6. Permutations\r\n7. Permutations II\r\n8. N-Queens, N-Queens II\r\n9. Combinations\r\n10. Subsets\r\n11. Word Search\r\n12. Gray Code\r\n13. Subsets II\r\n14. Restore IP Addresses\r\n15. Palindrome Partitioning\r\n16. Add and Search Word - Data structure design\r\n17. Combination Sum III\r\n18. Additive Number\r\n19. Regular Expression Matching\r\n20. Word Break II\r\n\r\n##### [Binary Search](https://github.com/grace0927/JavaPractice/wiki/Binary-Search)\r\n1. Divide Two Integers\r\n2. Search for a Range\r\n3. Search Insert Position\r\n4. Search in Rotated Sorted Array\r\n5. Pow(x, n)\r\n6. Sqrt(x)\r\n7. Search a 2D Matrix\r\n8. Search in Rotated Sorted Array II\r\n9. Find Minimum in Rotated Sorted Array\r\n10. Find Minimum in Rotated Sorted Array II\r\n11. Search a 2D Matrix II\r\n12. First Bad Version\r\n13. H-Index II\r\n14. Find Peak Element\r\n\r\n##### [Bit Manipulation](https://github.com/grace0927/JavaPractice/wiki/Bit-Manipulation)\r\n1. Single Number\r\n2. Single Number II\r\n3. Reverse Bits\r\n4. Number of 1 Bits\r\n5. Bitwise AND of Numbers Range\r\n6. Power of Two\r\n7. Single Number III\r\n8. Maximum Product of Word Lengths\r\n\r\n##### [BFS](https://github.com/grace0927/JavaPractice/wiki/BFS)\r\n1. Binary Tree Level Order Traversal\r\n2. Binary Tree Zigzag Level Order Traversal\r\n3. Maximum Depth of Binary Tree\r\n4. Binary Tree Level Order Traversal II\r\n5. Word Ladder\r\n6. Sum Root to Leaf Numbers\r\n7. Surrounded Regions\r\n8. Clone Graph\r\n9. Binary Tree Right Side View\r\n10. Perfect Squares\r\n11. Minimum Height Trees\r\n12. Word Ladder II\r\n13. Remove Invalid Parentheses\r\n\r\n##### [DFS](https://github.com/grace0927/JavaPractice/wiki/DFS)\r\n1. Same Tree\r\n2. Validate Binary Search Tree\r\n3. Symmetric Tree\r\n4. Construct Binary Tree from Preorder and Inorder Traversal\r\n5. Construct Binary Tree from Inorder and Postorder Traversal\r\n6. Convert Sorted Array to Binary Search Tree\r\n7. Balanced Binary Tree\r\n8. Convert Sorted List to Binary Search Tree\r\n9. Minimum Depth of Binary Tree\r\n10. Path Sum\r\n11. Path Sum II\r\n12. Flatten Binary Tree to Linked List\r\n13. Recover Binary Search Tree\r\n14. Populating Next Right Pointers in Each Node\r\n15. Populating Next Right Pointers in Each Node II\r\n16. Number of Islands\r\n17. Course Schedule\r\n18. Binary Tree Paths\r\n19. Longest Increasing Path in a Matrix\r\n20. House Robber III\r\n21. Binary Tree Maximum Path Sum\r\n\r\n##### [Divide and Conquer](https://github.com/grace0927/JavaPractice/wiki/Divide-and-Conquer)\r\n1. Median of Two Sorted Arrays\r\n2. Merge k Sorted Lists\r\n3. Different Ways to Add Parentheses\r\n4. Burst Balloons\r\n\r\n##### [Dynamic Programming](https://github.com/grace0927/JavaPractice/wiki/Dynamic-Programming)\r\n1. Longest Valid Parentheses\r\n2. Unique Paths\r\n3. Unique Paths II\r\n4. Minimum Path Sum\r\n5. Climbing Stairs\r\n6. Edit Distance\r\n7. Unique Binary Search Trees\r\n8. Unique Binary Search Trees II\r\n9. Decode Ways\r\n10. Triangle\r\n11. Best Time to Buy and Sell Stock\r\n12. Word Break\r\n13. House Robber\r\n14. Counting Bits\r\n15. House Robber II\r\n16. Range Sum Query - Immutable\r\n17. Longest Increasing Subsequence\r\n18. Range Sum Query 2D - Immutable\r\n19. Coin Change\r\n20. Maximal Square\r\n21. Maximum Product Subarray\r\n22. Best Time to Buy and Sell Stock with Cooldown\r\n23. Counting Bits\r\n24. Wildcard Matching\r\n25. Distinct Subsequences\r\n26. Interleaving String\r\n27. Scramble String\r\n28. Dungeon Game\r\n29. Best Time to Buy and Sell Stock III\r\n\r\n##### [Graph](https://github.com/grace0927/JavaPractice/wiki/Graph)\r\n1. Course Schedule II\r\n2. Reconstruct Itinerary\r\n\r\n##### [Greedy](https://github.com/grace0927/JavaPractice/wiki/Greedy)\r\n1. Jump Game\r\n2. Jump Game II\r\n3. Best Time to Buy and Sell Stock II\r\n4. Candy\r\n5. Gas Station\r\n6. Patching Array\r\n7. Remove Duplicate Letters\r\n\r\n##### [Hash Table](https://github.com/grace0927/JavaPractice/wiki/Hash-Table)\r\n1. Two Sum   \r\n2. Longest Substring Without Repeating Characters   \r\n3. Valid Sudoku   \r\n4. Group Anagrams  \r\n5. Substring with Concatenation of All Words\r\n6. Copy List with Random Pointer\r\n7. LRU Cache\r\n8. Max Points on a Line\r\n9. Fraction to Recurring Decimal\r\n10. Isomorphic Strings\r\n11. Count Primes\r\n12. Happy Number\r\n13. Repeated DNA Sequences\r\n14. Contains Duplicate\r\n15. Contains Duplicate II\r\n16. Contains Duplicate III\r\n17. Valid Anagram\r\n18. H-Index\r\n19. Word Pattern\r\n20. Bulls and Cows\r\n21. Longest Consecutive Sequence\r\n\r\n##### [Heap](https://github.com/grace0927/JavaPractice/wiki/Heap)\r\n1. Sliding Window Maximum\r\n2. Kth Largest Element in an Array\r\n3. Find Median from Data Stream\r\n\r\n##### [Linked List](https://github.com/grace0927/JavaPractice/wiki/Linked-List)\r\n1. Add Two Numbers   \r\n2. Merge Two Sorted Lists   \r\n3. Swap Nodes in Pairs   \r\n4. Reverse Nodes in k-Group   \r\n5. Remove Duplicates from Sorted List II   \r\n6. Remove Duplicates from Sorted List\r\n7. Reverse Linked List II\r\n8. Reorder List\r\n9. Insertion Sort List\r\n10. Sort List\r\n11. Intersection of Two Linked Lists\r\n12. Remove Linked List Elements\r\n13. Reverse Linked List\r\n14. Delete Node in a Linked List\r\n\r\n##### [Math](https://github.com/grace0927/JavaPractice/wiki/Math)\r\n1. Reverse Integer\r\n2. Palindrome Number\r\n3. Integer to Roman\r\n4. Roman to Integer\r\n5. Permutation Sequence\r\n6. Excel Sheet Column Title\r\n7. Excel Sheet Column Number\r\n8. Factorial Trailing Zeroes\r\n9. Rectangle Area\r\n10. Basic Calculator\r\n11. Add Digits\r\n12. Ugly Number\r\n13. Ugly Number II\r\n14. Nim Game\r\n15. Super Ugly Number\r\n16. Bulb Switcher\r\n17. Power of Three\r\n18. Number of Digit One\r\n19. Self Crossing\r\n\r\n##### [Sort](https://github.com/grace0927/JavaPractice/wiki/Sort)\r\n1. Insertion Sort List\r\n2. Largest Number\r\n3. Wiggle Sort II\r\n4. Maximum Gap\r\n\r\n##### [Stack & Queue](https://github.com/grace0927/JavaPractice/wiki/Stack)\r\n1. Valid Parentheses\r\n2. Simplify Path\r\n3. Largest Rectangle in Histogram\r\n4. Evaluate Reverse Polish Notation\r\n5. Min Stack\r\n6. Binary Search Tree Iterator\r\n7. Implement Stack using Queues\r\n8. Implement Queue using Stacks\r\n9. Peeking Iterator\r\n10. Verify Preorder Serialization of a Binary Tree\r\n11. Maximal Rectangle\r\n12. Flatten Nested List Iterator\r\n\r\n##### [String](https://github.com/grace0927/JavaPractice/wiki/String)\r\n1. Longest Palindromic Substring   \r\n2. ZigZag Conversion   \r\n3. Longest Common Prefix   \r\n4. String to Integer (atoi)   \r\n5. Count and Say   \r\n6. Multiply Strings   \r\n7. Length of Last Word   \r\n8. Add Binary   \r\n9. Text Justification\r\n10. Reverse Words in a String\r\n11. Compare Version Numbers\r\n12. Basic Calculator II\r\n13. Integer to English Words\r\n\r\n##### [Tree](https://github.com/grace0927/JavaPractice/wiki/Tree)\r\n1. Binary Tree Inorder Traversal\r\n2. Binary Tree Preorder Traversal\r\n3. Binary Tree Postorder Traversal\r\n4. Count Complete Tree Nodes\r\n5. Invert Binary Tree\r\n6. Kth Smallest Element in a BST\r\n7. Lowest Common Ancestor of a Binary Search Tree\r\n8. Serialize and Deserialize Binary Tree\r\n9. Lowest Common Ancestor of a Binary Tree\r\n10. Count of Smaller Numbers After Self\r\n\r\n##### [Trie](https://github.com/grace0927/JavaPractice/wiki/Trie)\r\n1. Implement Trie (Prefix Tree)\r\n2. Word Search II\r\n\r\n##### [Two Pointer](https://github.com/grace0927/JavaPractice/wiki/Two-Pointer)\r\n1. Container With Most Water   \r\n2. 3Sum   \r\n3. 3Sum Closest   \r\n4. 4Sum   \r\n5. Remove Nth Node From End of List   \r\n6. Remove Duplicates from Sorted Array   \r\n7. Remove Element   \r\n8. Implement strStr()   \r\n9. Trapping Rain Water   \r\n10. Rotate List   \r\n11. Sort Colors   \r\n12. Remove Duplicates from Sorted Array II   \r\n13. Partition List   \r\n14. Merge Sorted Array\r\n15. Valid Palindrome\r\n16. Linked List Cycle\r\n17. Linked List Cycle II\r\n18. Minimum Size Subarray Sum\r\n19. Palindrome Linked List\r\n20. Move Zeroes\r\n21. Find the Duplicate Number\r\n22. Odd Even Linked List\r\n23. Minimum Window Substring\r\n\r\n## lintcode\r\nLintcode Algorithm problems\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}